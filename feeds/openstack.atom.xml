<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Xcodest</title><link href="http://xcodest.me/" rel="alternate"></link><link href="http://xcodest.me/feeds/openstack.atom.xml" rel="self"></link><id>http://xcodest.me/</id><updated>2015-06-04T00:00:00+08:00</updated><entry><title>Glance Create Image from Existent Image in Ceph</title><link href="http://xcodest.me/glance-create-image-from-existent-image-in-ceph.html" rel="alternate"></link><updated>2015-06-04T00:00:00+08:00</updated><author><name>Jeffrey4l</name></author><id>tag:xcodest.me,2015-06-04:glance-create-image-from-existent-image-in-ceph.html</id><summary type="html">&lt;p&gt;当使用 Ceph + Glance 时，镜像需要使用 RAW 格式，这会导致创建镜像时非常的慢。有的时候，也需要把 Ceph 中现有的镜像导入到 Glance 中。这时可以使用 --location 参数来指定镜像所在的远程位置。也就可以使用现有的 Ceph 镜像来快速创建。&lt;/p&gt;
&lt;p&gt;可以先用 rbd 上传镜像，转换格式(也会比较慢，还不如直接上传 RAW 格式的镜像)。然后再做好对应的 snap , 并加以保护。是后一步的location必须按格式写(见[0])，这样才会使用rbd的 COW clone 功能。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# image format 2 support layering&lt;/span&gt;
rbd --image-format &lt;span class="m"&gt;2&lt;/span&gt; import /tmp/ubuntu14.04.2.dsk &lt;span class="nv"&gt;$uuid&lt;/span&gt;

&lt;span class="c"&gt;# Convert to raw image type&lt;/span&gt;
qemu-img convert -O raw rbd:&lt;span class="nv"&gt;$pool&lt;/span&gt;/&lt;span class="nv"&gt;$uuid&lt;/span&gt; rbd:&lt;span class="nv"&gt;$pool&lt;/span&gt;/&lt;span class="nv"&gt;$uuid&lt;/span&gt;

&lt;span class="c"&gt;# Make Snapshot and protect it which is require by image clone in nova libvirt.&lt;/span&gt;
rbd --pool images snap create --snap snap &lt;span class="nv"&gt;$uuid&lt;/span&gt;
rbd --pool images snap protect --image &lt;span class="nv"&gt;$uuid&lt;/span&gt; --snap snap

&lt;span class="c"&gt;# Create Image in Glance&lt;/span&gt;
glance image-create --id &lt;span class="nv"&gt;$uuid&lt;/span&gt; --name ubuntu14.04.2 --disk-format raw --container-format bare --is-public True --location rbd://&lt;span class="nv"&gt;$fsid&lt;/span&gt;/images/&lt;span class="nv"&gt;$uuid&lt;/span&gt;/snap
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;REF&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;[0] &lt;a href="https://github.com/openstack/nova/blob/4a02d9415f64e8d579d1b674d6d2efda902b01fa/nova/virt/libvirt/rbd_utils.py#L179"&gt;https://github.com/openstack/nova/blob/4a02d9415f64e8d579d1b674d6d2efda902b01fa/nova/virt/libvirt/rbd_utils.py#L179&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[1] &lt;a href="http://www.sebastien-han.fr/down/OpenStack%20_%20Ceph%20-%20Liberty.pdf"&gt;http://www.sebastien-han.fr/down/OpenStack%20_%20Ceph%20-%20Liberty.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[2] &lt;a href="http://www.sebastien-han.fr/blog/2013/05/07/use-existing-rbd-images-and-put-it-into-glance/"&gt;http://www.sebastien-han.fr/blog/2013/05/07/use-existing-rbd-images-and-put-it-into-glance/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Oz Templates</title><link href="http://xcodest.me/oz-templates.html" rel="alternate"></link><updated>2015-05-11T00:00:00+08:00</updated><author><name>Jeffrey4l</name></author><id>tag:xcodest.me,2015-05-11:oz-templates.html</id><summary type="html">&lt;p&gt;最近利用&lt;a href="https://github.com/clalancette/oz"&gt;OZ&lt;/a&gt;做了几个常用镜像的自动化制作。回头有用到的会再加进去。说明如下&lt;/p&gt;
&lt;p&gt;项目地址: &lt;a href="https://github.com/jeffrey4l/oz-templates"&gt;https://github.com/jeffrey4l/oz-templates&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以下是README里的内容。&lt;/p&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;p&gt;The isos are located in &lt;code&gt;/data/isos/&lt;/code&gt;. The isos' name are conversionally.
Including&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CentOS-6.3-x86_64-bin-DVD1.iso&lt;/li&gt;
&lt;li&gt;RHEL-6.3-x86_64-DVD.iso&lt;/li&gt;
&lt;li&gt;ubuntu-14.04.1-server-amd64.iso&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/clalancette/oz.git
cd oz
git clone https://github.com/jeffrey4l/oz-templates.git
cd oz-templates
make all
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Detail&lt;/h2&gt;
&lt;p&gt;The image are configured as following&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;without lvm, which will helpful for partion auto extend.&lt;/li&gt;
&lt;li&gt;Default image size is 40GB&lt;/li&gt;
&lt;li&gt;Installed cloud-init with some basic configuration.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="OpenStack"></category></entry><entry><title>Nova Security Group相关配置</title><link href="http://xcodest.me/nova-security-groupxiang-guan-pei-zhi.html" rel="alternate"></link><updated>2015-03-18T00:00:00+08:00</updated><author><name>Jeffrey4l</name></author><id>tag:xcodest.me,2015-03-18:nova-security-groupxiang-guan-pei-zhi.html</id><summary type="html">&lt;h1&gt;相关配置&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;network_api_class - 设置 network 模块所用的api&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nova.network.api.API&lt;/code&gt; - 通过rpc与nova-network交互&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nova.network.neutronv2.API&lt;/code&gt; - 通过http与neutron-server交互&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;security_group_api - 设置 security group 模块所用的api类&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nova&lt;/code&gt; (&lt;code&gt;nova.compute.api.SecurityGroupAPI&lt;/code&gt;) - 通过rcp与nova-compute交互&lt;/li&gt;
&lt;li&gt;&lt;code&gt;neutron&lt;/code&gt; ( &lt;code&gt;nova.network.security_group.neutron_driver.SecurityGroupAPI&lt;/code&gt; ) - 通过http与neutron-server交互&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;linuxnet_interface_driver - 在机器与 ethernet interface plug&amp;amp;unplug时调用 。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nova.network.linux_net.LinuxBridgeInterfaceDriver&lt;/code&gt; - used in nova-network&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nova.network.linux_net.linuxOVSInterfaceDriver&lt;/code&gt; - use in neutron + ml2 + ovs&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nova.network.linux_net.NeutronLinuxBridgeInterfaceDriver&lt;/code&gt; - use in neutron + ml2 + linuxbridge&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;firewall_driver - 虚拟化层所用的 firewall。在nova-network时代，security group由iptables和ebtables实现。在neutron时代，这个已经不需要了。但是neutron里现在还有arp-spoofing的bug, 参见[2]&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nova.virt.firewall.IptablesFirewallDrive&lt;/code&gt; - &lt;/li&gt;
&lt;li&gt;&lt;code&gt;nova.virt.firewall.NoopFirewallDriver&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;使用组合：&lt;/h1&gt;
&lt;p&gt;nova-network + libvirt&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nova_api_class=nova.network.api.API
security_group_ap=nova
linuxnet_interface_driver=nova.network.linux_net.LinuxBridgeInterfaceDriver
firewall_driver=nova.virt.firewall.IptablesFirewallDrive
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;neutron + ml2 + linuxbridge plugin + libvirt&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nova_api_class=nova.network.neutronv2.API
security_group_ap=neutron
linuxnet_interface_driver=nova.network.linux_net.NeutronLinuxBridgeInterfaceDriver
firewall_driver=nova.virt.firewall.NoopFirewallDriver
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;neutron + ml2 + ovs plugin + libvirt&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nova_api_class=nova.network.neutronv2.API
security_group_ap=neutron
linuxnet_interface_driver=nova.network.linux_net.linuxOVSInterfaceDriver
firewall_driver=nova.virt.firewall.NoopFirewallDriver
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;REF&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://kennethjiang.blogspot.jp/2012/02/ebtables-in-openstack-nova-and.html"&gt;ebtables in Openstack Nova&lt;/a&gt; - nwfilter explaination&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blueprints.launchpad.net/neutron/+spec/arp-spoof-patch-ebtables"&gt;Preventing ARP spoofing via ebtables&lt;/a&gt; - Neutron BP for preventing arp snoofing. Expected in Kilo&lt;ol&gt;
&lt;li&gt;&lt;a href="https://bugs.launchpad.net/neutron/+bug/1274034"&gt;Neutron firewall anti-spoofing does not prevent ARP poisoning&lt;/a&gt; - Related bug&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary><category term="Network"></category></entry><entry><title>Cinder V2 API</title><link href="http://xcodest.me/cinder-v2-api.html" rel="alternate"></link><updated>2015-03-10T00:00:00+08:00</updated><author><name>Jeffrey4l</name></author><id>tag:xcodest.me,2015-03-10:cinder-v2-api.html</id><summary type="html">&lt;p&gt;cinder v2 api add more feature than v1, Like QoS. And the v1 is marked deprecated in juno and will be removed soon. ( may be in kilo).&lt;/p&gt;
&lt;h1&gt;Enable the v2 in cinder&lt;/h1&gt;
&lt;p&gt;Change the following config. The v1 and v2 is enabled in default.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# DEPRECATED: Deploy v1 of the Cinder API. (boolean value)&lt;/span&gt;
&lt;span class="c1"&gt;#enable_v1_api=true&lt;/span&gt;

&lt;span class="c1"&gt;# Deploy v2 of the Cinder API. (boolean value)&lt;/span&gt;
&lt;span class="c1"&gt;#enable_v2_api=true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Enable the cinder v2 api in nova&lt;/h1&gt;
&lt;p&gt;In current nova config ( juno ), the default config like below. Depend on &lt;code&gt;catalog_info&lt;/code&gt; key, it use the v2 first. If v2 is not found, it will fall back to v1 version.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[cinder]&lt;/span&gt;

&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Options defined in nova.volume.cinder&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;

&lt;span class="c1"&gt;# Info to match when looking for cinder in the service&lt;/span&gt;
&lt;span class="c1"&gt;# catalog. Format is: separated values of the form:&lt;/span&gt;
&lt;span class="c1"&gt;# &amp;lt;service_type&amp;gt;:&amp;lt;service_name&amp;gt;:&amp;lt;endpoint_type&amp;gt; (string value)&lt;/span&gt;
&lt;span class="c1"&gt;#catalog_info=volumev2:cinderv2:publicURL&lt;/span&gt;

&lt;span class="c1"&gt;# Override service catalog lookup with template for cinder&lt;/span&gt;
&lt;span class="c1"&gt;# endpoint e.g. http://localhost:8776/v1/%(project_id)s&lt;/span&gt;
&lt;span class="c1"&gt;# (string value)&lt;/span&gt;
&lt;span class="c1"&gt;#endpoint_template=&amp;lt;None&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;# Region name of this node (string value)&lt;/span&gt;
&lt;span class="c1"&gt;#os_region_name=&amp;lt;None&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;# Number of cinderclient retries on failed http calls (integer&lt;/span&gt;
&lt;span class="c1"&gt;# value)&lt;/span&gt;
&lt;span class="c1"&gt;#http_retries=3&lt;/span&gt;

&lt;span class="c1"&gt;# Allow attach between instance and volume in different&lt;/span&gt;
&lt;span class="c1"&gt;# availability zones. (boolean value)&lt;/span&gt;
&lt;span class="c1"&gt;#cross_az_attach=true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can just add the endpoint to the keystone to enable the cinder v2 api.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;keystone service-create --name&lt;span class="o"&gt;=&lt;/span&gt;cinderv2 --type&lt;span class="o"&gt;=&lt;/span&gt;volumev2 &lt;span class="se"&gt;\&lt;/span&gt;
  --description&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cinder Volume Service V2&amp;quot;&lt;/span&gt;

keystone endpoint-create &lt;span class="se"&gt;\&lt;/span&gt;
  --service-id&lt;span class="o"&gt;=&lt;/span&gt;the_service_id_above &lt;span class="se"&gt;\&lt;/span&gt;
  --publicurl&lt;span class="o"&gt;=&lt;/span&gt;http://controller:8776/v2/%&lt;span class="se"&gt;\(&lt;/span&gt;tenant_id&lt;span class="se"&gt;\)&lt;/span&gt;s &lt;span class="se"&gt;\&lt;/span&gt;
  --internalurl&lt;span class="o"&gt;=&lt;/span&gt;http://controller:8776/v2/%&lt;span class="se"&gt;\(&lt;/span&gt;tenant_id&lt;span class="se"&gt;\)&lt;/span&gt;s &lt;span class="se"&gt;\&lt;/span&gt;
  --adminurl&lt;span class="o"&gt;=&lt;/span&gt;http://controller:8776/v2/%&lt;span class="se"&gt;\(&lt;/span&gt;tenant_id&lt;span class="se"&gt;\)&lt;/span&gt;s

service cinder-scheduler restart
service cinder-api restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;REF&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;http://docs.openstack.org/havana/install-guide/install/apt/content/cinder-controller.html&lt;/li&gt;
&lt;li&gt;https://wiki.openstack.org/wiki/CinderAPIv2&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Cinder"></category><category term="OpenStack"></category></entry><entry><title>Glance Image Cache</title><link href="http://xcodest.me/glance-image-cache.html" rel="alternate"></link><updated>2014-07-17T00:00:00+08:00</updated><author><name>Jeffrey4l</name></author><id>tag:xcodest.me,2014-07-17:glance-image-cache.html</id><summary type="html">&lt;p&gt;Glance 增加了一层cache的Middleware，用来缓存从file store后端取过来的镜像。一定
程度上可以加快取镜像的速度。这个功能默认情况下是没开启的。&lt;/p&gt;
&lt;p&gt;因为是通过middleware来控制的，所以只要修改一下paster的配置就行。更简单的是指定
glance-api加载的pipeline的名字。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[deploy]&lt;/span&gt;
&lt;span class="c1"&gt;# possible value: none, cachine, keystone, keystone+caching, &lt;/span&gt;
&lt;span class="c1"&gt;# keystone+cachemanagement&lt;/span&gt;
&lt;span class="c1"&gt;# This value can get from glance-api-paste.conf file&lt;/span&gt;
&lt;span class="na"&gt;flavor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;keystone+caching&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;具体看下&lt;code&gt;glance-api-paster.conf&lt;/code&gt;文件就能明白。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[pipeline:glance-api]&lt;/span&gt;
&lt;span class="na"&gt;pipeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;versionnegotiation unauthenticated-context rootapp&lt;/span&gt;

&lt;span class="c1"&gt;# Use this pipeline for image caching and no auth&lt;/span&gt;
&lt;span class="k"&gt;[pipeline:glance-api-caching]&lt;/span&gt;
&lt;span class="na"&gt;pipeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;versionnegotiation unauthenticated-context cache rootapp&lt;/span&gt;

&lt;span class="c1"&gt;# Use this pipeline for caching w/ management interface but no auth&lt;/span&gt;
&lt;span class="k"&gt;[pipeline:glance-api-cachemanagement]&lt;/span&gt;
&lt;span class="na"&gt;pipeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;versionnegotiation unauthenticated-context cache cachemanage rootapp&lt;/span&gt;

&lt;span class="c1"&gt;# Use this pipeline for keystone auth&lt;/span&gt;
&lt;span class="k"&gt;[pipeline:glance-api-keystone]&lt;/span&gt;
&lt;span class="na"&gt;pipeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;versionnegotiation authtoken context rootapp&lt;/span&gt;

&lt;span class="c1"&gt;# Use this pipeline for keystone auth with image caching&lt;/span&gt;
&lt;span class="k"&gt;[pipeline:glance-api-keystone+caching]&lt;/span&gt;
&lt;span class="na"&gt;pipeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;versionnegotiation authtoken context cache rootapp&lt;/span&gt;

&lt;span class="c1"&gt;# Use this pipeline for keystone auth with caching and cache management&lt;/span&gt;
&lt;span class="k"&gt;[pipeline:glance-api-keystone+cachemanagement]&lt;/span&gt;
&lt;span class="na"&gt;pipeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;versionnegotiation authtoken context cache cachemanage rootapp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;不同的pipeline用到了不同的middleware, 启作用的是cache 和 cachemanagement这两个
。&lt;/p&gt;
&lt;h2&gt;REF&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://docs.openstack.org/developer/glance/cache.html"&gt;The Glance Image Cache&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="Glance"></category></entry><entry><title>Dhcp lease errors in vlan mode</title><link href="http://xcodest.me/dhcp-lease-errors-in-vlan-mode.html" rel="alternate"></link><updated>2013-08-27T08:50:00+08:00</updated><author><name>Jeffrey4l</name></author><id>tag:xcodest.me,2013-08-27:dhcp-lease-errors-in-vlan-mode.html</id><summary type="html">&lt;p&gt;在使用&lt;code&gt;keepalived&lt;/code&gt;的过程中，出现了dhcp失败，而导致keepalived工作不正常的问题。而且之前也出现过dhcp偶尔失败，导致虚拟机不能得到IP, 从而不能访问的情况。虽然在&lt;code&gt;/etc/sysconfig/network-scripts/ifcfg-eth0&lt;/code&gt;中加上了如下语句：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;PERSISTENT_DHCLIENT=1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使得dhcp单次失败后，继续重试。但是仔细查看dhclient的日志后，发现它有大量的dhcp request失败/超时。在一个&lt;a href="http://openstack.markmail.org/search/?q=Dhcp+lease+errors+in+vlan+mode#query:Dhcp%20lease%20errors%20in%20vlan%20mode+page:1+mid:7kjf4hljszpydsrx+state:results"&gt;邮件列表&lt;/a&gt;中找到原因，如下：&lt;/p&gt;
&lt;p&gt;To fix issues with failed dhcp leases in vlan mode, upgrade to dnsmasq 2.6.1&lt;/p&gt;
&lt;p&gt;THE LONG VERSION&lt;/p&gt;
&lt;p&gt;There is an issue with the way nova uses dnsmasq in VLAN mode. It starts up a
single copy of dnsmasq for each vlan on the network host (or on every host in
multi_host mode). The problem is in the way that dnsmasq binds to an ip address
and port. Both copies can respond to broadcast packet, but unicast packets
can only be answered by one of the copies.&lt;/p&gt;
&lt;p&gt;In nova this means that guests from only one project will get responses to their
unicast dhcp renew requests.  Unicast projects from guests in other projects get
ignored. What happens next is different depending on the guest os.  Linux
generally will send a broadcast packet out after the unicast fails, and so the
only effect is a small (tens of ms) hiccup while interface is reconfigured.  It
can be much worse than that, however. I have seen cases where Windows just gives
up and ends up with a non-configured interface.&lt;/p&gt;
&lt;p&gt;This bug was first noticed by some users of openstack who rolled their own fix.
Basically, on linux, if you set the SO_BINDTODEVICE socket option, it will allow
different daemons to share the port and respond to unicast packets, as long as
they listen on different interfaces. I managed to communicate with Simon Kelley,
the maintainer of dnsmasq and he has integrated a fix for the issue in the
current version of dnsmaq.&lt;/p&gt;
&lt;p&gt;I don't know how may users out there are using vlan mode, but you should be able
to deal with this issue by upgrading dnsmasq. It would be great if the various
distributionss could upgrade as well, or at least try to patch in the fix. If
upgrading dnsmasq is out of the question, a possible workaround is to minimize
lease renewals with something like the following combination of config options.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# release leases immediately on terminate
force_dhcp_release=true
# one week lease time
dhcp_lease_time=604800
# two week disassociate timeout
fixed_ip_disassociate_timeout=1209600
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is also documented &lt;a href="http://docs.openstack.org/trunk/openstack-compute/admin/content/configuring-vlan-networking.html#vlan-known-issues"&gt; Known issue with failed DHCP leases in VLAN configuration&lt;/a&gt;&lt;/p&gt;</summary><category term="DHCP"></category><category term="Network"></category><category term="VLAN"></category></entry><entry><title>Openstack Brief</title><link href="http://xcodest.me/openstack-brief.html" rel="alternate"></link><updated>2013-06-17T23:08:00+08:00</updated><author><name>Jeffrey4l</name></author><id>tag:xcodest.me,2013-06-17:openstack-brief.html</id><summary type="html">&lt;p&gt;自从Openstack诞生之日起，就受到越来越多的开发者，用户的关注。整个代码的规模和质量正在飞速的发展。随着各种功能的增加，Openstack下面已经拥有了相当多子项目，来完成各种各样的功能。本文将简单介绍各个子项目的功能和发展。所有的项目现状是基于Grizzly的版本来写的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Keystone&lt;/li&gt;
&lt;li&gt;Nova&lt;/li&gt;
&lt;li&gt;Cinder&lt;/li&gt;
&lt;li&gt;Glance&lt;/li&gt;
&lt;li&gt;Openstack Network(Quantum)&lt;/li&gt;
&lt;li&gt;LBaaS&lt;/li&gt;
&lt;li&gt;Ceilometer&lt;/li&gt;
&lt;li&gt;Baremetal&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Keystone&lt;/h1&gt;
&lt;p&gt;keystone是Openstack的认证和服务注册模块。其结构比较简单。其功能包括:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;认证&lt;/strong&gt; 主要功能是管理用户和用户组的信息，后端可以绑定ldap, mysql等认证方式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务注册模块&lt;/strong&gt; 主要用于管理Openstack相关服务的地址，所有的服务都要先注册到Keystone中，才可以使用。它可使用基于文件的模板，也可以使用数据库存储。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Token&lt;/strong&gt; 管理。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;相对于其它子项目来说，keystone最近的变化并不是太大。将来一个比较大的变化就是基于domain的权限控制，届时Tenant里也可以细经出管理员和使用者的角色，并有详细的权限功能控制。&lt;/p&gt;
&lt;h1&gt;Nova&lt;/h1&gt;
&lt;p&gt;Nova是Openstack最早的子项目。现在其它项目如cinder, quantum(Openstack Network)都是来自于该项目。可以说这是Openstack中最复杂，最主要的部分。它负责&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户接口(nova-api)。处理来自于用户的请求，并做出合理的响应。&lt;/li&gt;
&lt;li&gt;计算调度(nova-scheduler)。用于在物理之前进行资源的调配。&lt;/li&gt;
&lt;li&gt;虚拟化的管理(nova-compute)。管理虚拟机的适配接口。通过它可以管理真实的虚拟技术驱动的机器，如KVM, XEN, Hypervisor V等。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然还有一些功能如nova-network, nova-volume已经从nova项目中迁移出来，成为独立的子项目。将来一段时间的变化，主要集中在nova-network的废弃，nova-conductor的更加完善，新的api(v3)的支持，对于祼机的支持。&lt;/p&gt;
&lt;h1&gt;Cinder&lt;/h1&gt;
&lt;p&gt;Cinder是由nova-volume分化而来，用于管理虚拟机的块存储(block storage), 类似AWS的EBS。其功能主要是创建，维护，删除块存储。后端可以使用LVM, glusterFs, Ceph, NFS等软件技术的存储，也可以使用NetApp, Huawei，IBM等商用解决方案。当然也可以自己编写自己存储的Driver来支持更多的存储类型。&lt;/p&gt;
&lt;h1&gt;Glance&lt;/h1&gt;
&lt;p&gt;Glance用于管理各种系统的镜像。他后端也可以配置各种存储方案。包括本地，swift, ceph等。&lt;/p&gt;
&lt;h1&gt;Openstack Network.&lt;/h1&gt;
&lt;p&gt;(Quantum名称因为商标问题停用）。&lt;/p&gt;
&lt;p&gt;网络基本是Openstack最复杂的模块，涉及到的技术和协议相当多，也最容易出问题。也正因为此，很有必要将网络模块从越来越笨重的nova的拿出来。&lt;/p&gt;
&lt;p&gt;Openstack Network提示了强大的网络服务（Network-as-a-service),用来实现L2, L3层的网络。在原有的nova-network的基础之上，增加了相当多的功能&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;加上了xvlan, gre等网络技术，并可以编写自己的插件，来增加其功能&lt;/li&gt;
&lt;li&gt;使用者可以创建更加丰富的网络模型，如私用路由器等&lt;/li&gt;
&lt;li&gt;为Qos, 流量监控等提供支持。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在Quantum还有一些问题，如HA方案不成熟，不太适用于Production。不过根据社区的计划，下一个版本(H)将会把nova-network废弃掉。所以Quantum才是真正的趋势。现在很有必要将其吃透。&lt;/p&gt;
&lt;h1&gt;LBaaS&lt;/h1&gt;
&lt;p&gt;Load-Balancer-as-a-service.在Quantum基础上实现的负载均衡。后端既可以使用haproxy,也可以使用cisco, f5等硬件。（不过我还没有功能搭建过这个服务。&lt;/p&gt;
&lt;h1&gt;Ceilometer&lt;/h1&gt;
&lt;p&gt;Openstack的计量，计费模块。可以统计Cpu, IO, Network使用的详细情况。对公有云和私有云都有极大的好处。现在也有一个Horizon的插件，可以直接在dashboard里显示使用情况（将来，该插件会合并到horizon中）&lt;/p&gt;
&lt;h1&gt;Baremetal&lt;/h1&gt;
&lt;p&gt;增加Openstack对裸机的管理功能。可以实现直接对裸机进行系统安装，配置。模糊了虚拟化和物理机之间的界线。现在所有模块包括nova, glance, cinder都在努力增强这方面的功能。
这个模块，我更期望是可以建立Nested-Openstack。同一个Openstack环境，既管理物理机，又自动在物理机上安装Openstack的模块来成为Openstack的一部分。&lt;/p&gt;</summary></entry></feed>